{"version":3,"sources":["weatherStore.js","Home.web.js","Pokemon.js","App.js","index.js"],"names":["weatherStore","deviceId","timestamp","Date","Temperature","Humidity","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","chartReference","timeData","temperatureData","humidityData","data","labels","datasets","fill","label","yAxisID","borderColor","pointBoarderColor","backgroundColor","pointHoverBackgroundColor","pointHoverBorderColor","basicOptions","title","display","text","fontSize","scales","yAxes","id","type","scaleLabel","labelString","position","weatherData","forEach","element","push","Timestamp","console","log","obj","JSON","parse","length","shift","chartInstance","update","err","error","_this2","react_default","a","createElement","View","build_default","url","onOpen","handleOpen","onClose","handleClose","reconnect","debug","onMessage","handleData","bind","es","ref","reference","width","height","options","Component","Pokemon","selectedPokemon","backButton","react_router_dom","to","Text","concat","number","name","Image","style","source","uri","photoUrl","Platform","OS","Button","onPress","Share","share","message","App","state","selectPokemon","setState","styles","container","exact","path","render","Home_web","assign","src_Pokemon","React","StyleSheet","create","flex","alignItems","justifyContent","marginTop","padding","ReactDom","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.556eda29.chunk.js","sourcesContent":["export default [\r\n    {\r\n        \"deviceId\": \"device1\",\r\n        \"timestamp\": new Date(\"2019-03-12T19:18:46+02:00\"),\r\n        \"Temperature\": 26.3,\r\n        \"Humidity\": 35.24\r\n    }\r\n];","import React, { Component } from 'react';\r\nimport { View, Text, FlatList, TouchableOpacity } from 'react-native';\r\nimport weatherData from './weatherStore';\r\nimport { Line } from 'react-chartjs-2';\r\nimport Websocket from 'react-websocket';\r\n\r\nclass Home extends Component {\r\n    chartReference = {};\r\n    timeData = [];\r\n    temperatureData = [];\r\n    humidityData = [];\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        weatherData.forEach(element => {\r\n            this.timeData.push(element.Timestamp);\r\n            this.temperatureData.push(element.Temperature);\r\n            this.humidityData.push(element.Humidity);\r\n        });\r\n    }\r\n\r\n    data = {\r\n        labels: this.timeData,\r\n        datasets: [\r\n        {\r\n            fill: false,\r\n            label: 'Temperature',\r\n            yAxisID: 'Temperature',\r\n            borderColor: \"rgba(255, 204, 0, 1)\",\r\n            pointBoarderColor: \"rgba(255, 204, 0, 1)\",\r\n            backgroundColor: \"rgba(255, 204, 0, 0.4)\",\r\n            pointHoverBackgroundColor: \"rgba(255, 204, 0, 1)\",\r\n            pointHoverBorderColor: \"rgba(255, 204, 0, 1)\",\r\n            data: this.temperatureData\r\n        },\r\n        {\r\n            fill: false,\r\n            label: 'Humidity',\r\n            yAxisID: 'Humidity',\r\n            borderColor: \"rgba(24, 120, 240, 1)\",\r\n            pointBoarderColor: \"rgba(24, 120, 240, 1)\",\r\n            backgroundColor: \"rgba(24, 120, 240, 0.4)\",\r\n            pointHoverBackgroundColor: \"rgba(24, 120, 240, 1)\",\r\n            pointHoverBorderColor: \"rgba(24, 120, 240, 1)\",\r\n            data: this.humidityData\r\n        }\r\n        ]\r\n    };\r\n\r\n    basicOptions = {\r\n        title: {\r\n            display: true,\r\n            text: 'Temperature & Humidity Real-time Data',\r\n            fontSize: 36\r\n        },\r\n        scales: {\r\n            yAxes: [{\r\n            id: 'Temperature',\r\n            type: 'linear',\r\n            scaleLabel: {\r\n                labelString: 'Temperature(C)',\r\n                display: true\r\n            },\r\n            position: 'left',\r\n            }, {\r\n                id: 'Humidity',\r\n                type: 'linear',\r\n                scaleLabel: {\r\n                labelString: 'Humidity(%)',\r\n                display: true\r\n                },\r\n                position: 'right'\r\n            }]\r\n        }\r\n    };\r\n\r\n    handleData(data) {\r\n        console.log('receive message' + data);\r\n        try {\r\n            var obj = JSON.parse(data);\r\n            if(!obj.timestamp || !obj.Temperature) {\r\n                return;\r\n            }\r\n            this.timeData.push(obj.timestamp);\r\n            this.temperatureData.push(obj.Temperature);\r\n            // only keep no more than 50 points in the line chart\r\n            const maxLen = 10;\r\n            var len = this.timeData.length;\r\n            if (len > maxLen) {\r\n                this.timeData.shift();\r\n                this.temperatureData.shift();\r\n            }\r\n\r\n            if (obj.Humidity) {\r\n                this.humidityData.push(obj.Humidity);\r\n            }\r\n            if (this.humidityData.length > maxLen) {\r\n                this.humidityData.shift();\r\n            }\r\n\r\n            this.chartReference.chartInstance.update();\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    handleOpen()  {\r\n        console.log(\"connected:)\");\r\n    }\r\n    handleClose() {\r\n        console.log(\"disconnected:(\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View>\r\n                <Websocket url='wss://iotmanager.azurewebsites.net'\r\n                    onOpen={this.handleOpen} onClose={this.handleClose}\r\n                    reconnect={true} debug={true}\r\n                    onMessage={this.handleData.bind(this)}/>\r\n                <Line \r\n                    ref={(reference) => this.chartReference = reference }\r\n                    data={this.data}\r\n                    width={1200}\r\n                    height={600}\r\n                    options={this.basicOptions}\r\n                />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { View, Text, Image, Platform, Button, Share } from 'react-native';\r\nimport { Link } from './routing';\r\n\r\nconst Pokemon = props => {\r\n    const { selectedPokemon } = props;\r\n    const handlePress = () => {\r\n        Share.share({\r\n            message: 'Check out my favorite pokemon',\r\n            url: props.selectedPokemon.photoUrl\r\n        });\r\n    };\r\n    const backButton = (\r\n        <View>\r\n            <Link to=\"/\">\r\n                <Text>Go Back</Text>\r\n            </Link>\r\n        </View>\r\n    );\r\n\r\n    if(!selectedPokemon) {\r\n        return (\r\n            <View>\r\n                {backButton}\r\n                <Text>No Pokemon Selected</Text>\r\n            </View>\r\n        );\r\n    }\r\n    return (\r\n        <View>\r\n            {backButton}\r\n            <View>\r\n                <Text>{`#${selectedPokemon.number}`}</Text>\r\n            </View>\r\n            <View>\r\n                <Text>{`Name: ${selectedPokemon.name}`}</Text>\r\n            </View>\r\n            <View>\r\n                <Text>{`Type: ${selectedPokemon.type}`}</Text>\r\n            </View>\r\n            <View>\r\n                <Image\r\n                    style={{ width: 50, height: 50 }}\r\n                    source={{ uri: selectedPokemon.photoUrl }}\r\n                />\r\n            </View>\r\n            {\r\n                Platform.OS !== 'web' &&\r\n                <View>\r\n                    <Button title=\"Share\" onPress={handlePress} />\r\n                </View>\r\n            }\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default Pokemon;","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Router, Switch, Route } from './routing';\nimport Home from './Home';\nimport Pokemon from './Pokemon';\n\nexport default class App extends React.Component {\n  state = {\n    selectedPokemon: null\n  };\n  selectPokemon = (selectedPokemon) => {\n    this.setState({\n      selectedPokemon\n    });\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Router>\n          <Switch>\n            <Route \n              exact \n              path=\"/\" \n              render={props => (\n                <Home {...props} selectPokemon={this.selectPokemon}/>\n              )} \n            />\n            <Route \n              exact \n              path=\"/pokemon\" \n              render={props => (\n                <Pokemon \n                  selectedPokemon = {this.state.selectedPokemon} \n                  {...props} \n                />\n              )} \n            />\n          </Switch>\n        </Router>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 50,\n    padding: 50\n  },\n});\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nimport  './index.css';\r\n\r\nReactDom.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}